
charset.c,697
static bool charset_enable_input;34,1156
static bool charset_enable_output;35,1190
static char *locale_charset;locale_charset36,1225
static iconv_t char_conv_iconv;38,1255
static char * char_conv_to;39,1287
static char * char_conv_from;40,1315
static int ignore_invalid;41,1345
#define BUFFER_SIZE	43,1373
static inline char * mpc_strchrnul(49,1489
static char * skip_invalid(57,1627
charset_set2(85,2173
charset_set(102,2517
static inline size_t deconst_iconv(120,2771
		const char **a;a125,2921
		char **b;b126,2939
charset_conv_strdup(135,3067
charset_close(170,3753
charset_init(182,3932
void charset_deinit(207,4474
charset_to_utf8(215,4560
charset_from_utf8(234,4856

command.c,1411
#define DIE(38,1234
#define SIMPLE_CMD(40,1309
#define SIMPLE_ONEARG_CMD(48,1565
static void my_finishCommand(55,1829
SIMPLE_CMD(60,1952
int cmd_add 82,2516
cmd_crop(124,3508
get_active_song(167,4505
wait_current(179,4799
int cmd_current(206,5439
int cmd_list_around(248,6386
int cmd_illustrate(312,7774
int cmd_del 358,8615
cmd_toggle(436,10468
cmd_outputs(450,10752
cmd_enable(474,11338
cmd_disable(487,11605
int cmd_play 499,11870
cmd_seek(533,12552
cmd_move(665,15946
cmd_playlist(686,16353
int is_substring_ignorecase(709,16757
cmd_search_general(729,17254
int cmd_search_title 761,17899
int cmd_search_artist 766,18043
int cmd_search_album 771,18189
int cmd_listall 776,18333
int cmd_update 804,18894
int cmd_ls 862,20139
int cmd_lsplaylists 884,20544
int cmd_load 902,20934
int cmd_insert 919,21264
int cmd_list 938,21717
int cmd_volume 968,22284
cmd_pause(1013,23166
int cmd_repeat 1021,23321
int cmd_random 1043,23698
int cmd_single 1065,24075
int cmd_consume 1087,24452
int cmd_crossfade 1109,24832
int cmd_mixrampdb 1132,25343
int cmd_mixrampdelay 1154,25787
cmd_version(1179,26264
int cmd_loadtab 1192,26582
int cmd_lstab 1215,27052
int cmd_tab 1239,27530
static char * DHMS(1274,28257
#define SECSPERDAY 1280,28377
#define SECSPERHOUR 1283,28429
#define SECSPERMIN 1286,28480
cmd_stats(1303,28759
cmd_status(1327,29525
cmd_replaygain(1335,29690

idle.c,43
int cmd_idle(28,916
cmd_idleloop(68,1766

list.c,304
static void makeListNodesArray(31,1109
static void freeListNodesArray(43,1369
List * makeList(48,1469
int insertInList(62,1735
int insertInListWithoutKey(98,2434
int findInList(131,3031
int deleteFromList(185,3932
void deleteNodeFromList(204,4228
void freeList(234,4780
void clearList(257,5207

main.c,452
static struct command 45,1378
	const char *command;command46,1402
	const int min,47,1424
	const int min, max;47,1424
	int pipe;48,1495
	cmdhandler handler;55,1852
	const char *usage;usage56,1873
	const char *help;help59,1941
} mpc_table 60,1960
print_usage(147,8193
static int print_help(153,8344
setup_connection(202,9551
find_command(226,10141
check_args(276,11260
run(304,11967
is_self_define_option(321,12308
int main(334,12563

message.c,95
cmd_channels(34,1050
cmd_sendmessage(53,1471
cmd_waitmessage(63,1670
cmd_subscribe(84,2203

options.c,641
#define MAX_LONGOPT_LENGTH 27,915
#define ERROR_UNKNOWN_OPTION 29,946
#define ERROR_BAD_ARGUMENT 30,983
#define ERROR_GOT_ARGUMENT 31,1020
#define ERROR_MISSING_ARGUMENT 32,1057
	int shortopt;35,1112
	const char *longopt;longopt36,1127
	const char *argument;argument37,1149
	const char *description;description38,1172
} arg_opt_t;39,1198
options_t options 42,1213
static const arg_opt_t option_table[option_table49,1383
static const unsigned option_table_size 60,1934
option_error(63,2037
lookup_long_option(87,2652
lookup_short_option(100,2884
handle_option(113,3068
print_option_help(148,3635
parse_options(166,4050

password.c,23
send_password(29,1063

search.c,251
#define DIE(30,974
get_search_type(33,1070
get_constraints(64,1621
static void my_finishCommand(89,2113
add_constraint(95,2248
add_constraints(111,2833
static int do_search 132,3277
cmd_search(149,3585
cmd_find(155,3697
cmd_findadd(161,3807

status.c,47
elapsed_percent(35,1169
print_status(50,1440

sticker.c,117
static void my_finishCommand(30,957
recv_print_stickers(36,1092
recv_print_stickers2(47,1335
cmd_sticker(70,1793

util.c,573
printErrorAndExit(39,1244
int stdinToArgArray(56,1718
void free_pipe_array 85,2238
int get_boolean 91,2337
	static const struct _bool_table 94,2382
		const char * on;95,2417
		const char * off;96,2436
int parse_int(124,3029
int parse_float(140,3350
int parse_songnum(156,3672
int parse_int_value_change(176,4043
static char * appendToString(201,4534
static const char * skipFormatting(220,4863
song_value(244,5224
songToFormatedString(285,6230
print_formatted_song(423,8682
pretty_print_song(434,8868
print_entity_list(440,8970
print_filenames(482,10050

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/async.c,632
closesocket(47,1714
#define MSG_DONTWAIT 54,1786
struct mpd_async 57,1817
	int fd;58,1836
	struct mpd_error_info error;60,1846
	struct mpd_buffer input;62,1877
	struct mpd_buffer output;64,1904
mpd_async_new(68,1954
mpd_async_free(88,2234
mpd_async_get_error(98,2392
mpd_async_get_error_message(106,2513
mpd_async_get_system_error(114,2652
mpd_async_copy_error(123,2822
mpd_async_get_fd(132,2989
mpd_async_events(141,3132
ignore_errno(167,3710
mpd_async_read(177,3854
mpd_async_write(214,4582
mpd_async_io(244,5139
mpd_async_send_command_v(279,5852
mpd_async_send_command(334,6943
mpd_async_recv_line(350,7229

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/capabilities.c,141
mpd_send_allowed_commands(36,1513
mpd_send_disallowed_commands(42,1640
mpd_send_list_url_schemes(48,1773
mpd_send_list_tag_types(54,1903

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/cmessage.c,261
mpd_send_subscribe(39,1571
mpd_run_subscribe(45,1722
mpd_send_unsubscribe(53,1923
mpd_run_unsubscribe(59,2078
mpd_send_send_message(67,2283
mpd_run_send_message(75,2475
mpd_send_read_messages(84,2713
mpd_recv_message(90,2857
mpd_send_channels(131,3769

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/connection.c,427
#define MPD_WELCOME_MESSAGE	49,1926
mpd_parse_welcome(52,1977
mpd_connection_sync_error(88,2897
mpd_connection_new(99,3244
mpd_connection_new_async(187,5520
void mpd_connection_free(221,6351
mpd_connection_get_settings(242,6836
mpd_connection_set_timeout(250,6975
mpd_connection_get_fd(260,7198
mpd_connection_get_async(266,7330
mpd_connection_get_server_version(272,7439
mpd_connection_cmp_server_version(278,7552

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/coutput.c,179
mpd_send_outputs(38,1570
mpd_recv_output(44,1702
mpd_send_enable_output(76,2373
mpd_run_enable_output(82,2530
mpd_send_disable_output(90,2740
mpd_run_disable_output(96,2899

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/cplaylist.c,665
	UNSIGNEDLEN 39,1594
	UNSIGNEDLEN = (sizeof(39,1594
	UNSIGNEDLEN = (sizeof(unsigned)39,1594
	UNSIGNEDLEN = (sizeof(unsigned) * CHAR_BIT 39,1594
mpd_send_list_playlists(43,1661
mpd_send_list_playlist(49,1791
mpd_send_list_playlist_meta(55,1943
mpd_send_playlist_clear(61,2104
mpd_run_playlist_clear(67,2258
mpd_send_playlist_add(75,2463
mpd_run_playlist_add(82,2645
mpd_send_playlist_move(91,2877
mpd_send_playlist_delete(104,3260
mpd_run_playlist_delete(115,3533
mpd_send_save(124,3762
mpd_run_save(130,3897
mpd_send_load(138,4082
mpd_run_load(144,4217
mpd_send_rename(152,4402
mpd_run_rename(159,4563
mpd_send_rm(168,4780
mpd_run_rm(174,4911

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/cstats.c,71
mpd_send_stats(42,1601
mpd_recv_stats(48,1728
mpd_run_stats(83,2467

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/cstatus.c,74
mpd_send_status(41,1599
mpd_recv_status(47,1730
mpd_run_status(75,2288

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/database.c,213
mpd_send_list_all(40,1594
mpd_send_list_all_meta(46,1734
mpd_send_list_meta(52,1883
mpd_send_update(58,2023
mpd_send_rescan(64,2162
mpd_recv_update_id(70,2305
mpd_run_update(85,2570
mpd_run_rescan(98,2852

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/directory.c,234
struct mpd_directory 42,1762
	char *path;path47,1869
mpd_directory_new(52,1927
void mpd_directory_free(74,2311
mpd_directory_dup(84,2501
mpd_directory_get_path(93,2683
mpd_directory_begin(102,2861
mpd_directory_feed(118,3168

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/entity.c,493
struct mpd_entity 41,1748
	enum mpd_entity_type type;45,1807
		struct mpd_directory *directory;directory56,2053
		struct mpd_song *song;song61,2149
		struct mpd_playlist *playlistFile;playlistFile66,2239
	} info;67,2276
mpd_entity_free(71,2294
mpd_entity_get_type(96,2750
mpd_entity_get_directory(104,2885
mpd_entity_get_song(113,3082
mpd_entity_get_playlist(122,3268
mpd_entity_feed_first(131,3454
mpd_entity_begin(156,4213
mpd_entity_feed(176,4523
mpd_recv_entity(208,5201

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/error.c,244
mpd_connection_get_error(35,1499
mpd_connection_get_error_message(41,1615
mpd_connection_get_server_error(47,1767
mpd_connection_get_server_error_location(55,1942
mpd_connection_get_system_error(63,2117
mpd_connection_clear_error(71,2288

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/example.c,59
handle_error(47,1869
print_tag(57,2095
int main(67,2320

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/fd_util.c,106
fd_mask_flags(51,1757
fd_set_cloexec(67,1990
fd_set_nonblock(83,2295
socket_cloexec_nonblock(102,2553

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/idle.c,315
static const char *const idle_names[idle_names45,1837
mpd_idle_name(61,2044
mpd_idle_name_parse(71,2226
mpd_idle_parse_pair(83,2427
mpd_recv_idle(94,2615
mpd_send_idle(139,3686
mpd_send_idle_mask(145,3797
mpd_send_noidle(177,4588
mpd_run_idle(187,4854
mpd_run_idle_mask(202,5129
mpd_run_noidle(218,5445

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/ierror.c,220
mpd_error_deinit(39,1553
mpd_error_message(48,1724
mpd_error_message_n(61,2020
mpd_error_printf(78,2425
mpd_error_system_message(94,2699
mpd_error_errno(117,3222
mpd_error_entity(125,3357
mpd_error_copy(135,3594

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/iso8601.c,135
gmtime_r(36,1513
timezone_offset(50,1767
timegm_emulation(78,2359
iso8601_datetime_parse(88,2485
iso8601_datetime_format(140,3654

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/list.c,62
mpd_command_list_begin(41,1727
mpd_command_list_end(70,2404

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/message.c,228
struct mpd_message 37,1541
	char *channel;channel38,1562
	char *text;text40,1579
mpd_message_begin(44,1617
mpd_message_feed(64,1936
mpd_message_free(80,2229
mpd_message_get_channel(90,2383
mpd_message_get_text(98,2513

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/mixer.c,57
mpd_send_set_volume(36,1525
mpd_run_set_volume(42,1667

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/output.c,264
struct mpd_output 40,1723
	unsigned id;41,1743
	char *name;name42,1757
	bool enabled;43,1770
mpd_output_begin(47,1809
mpd_output_feed(69,2147
mpd_output_free(86,2537
mpd_output_get_id(96,2684
mpd_output_get_name(104,2799
mpd_output_get_enabled(112,2910

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/parser.c,612
struct mpd_parser 36,1524
	enum mpd_parser_result result;41,1630
		bool discrete;45,1679
			enum mpd_server_error server;48,1708
			unsigned at;49,1741
			const char *message;message50,1757
		} error;51,1781
			const char *name,name54,1804
			const char *name, *value;value54,1804
		} pair;55,1833
	} u;56,1843
mpd_parser_new(60,1873
mpd_parser_free(74,2074
set_result(80,2174
mpd_parser_feed(95,2499
mpd_parser_is_discrete(162,3887
mpd_parser_get_server_error(170,4046
mpd_parser_get_at(178,4199
mpd_parser_get_message(186,4342
mpd_parser_get_name(194,4495
mpd_parser_get_value(202,4640

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/password.c,53
mpd_send_password(37,1530
mpd_run_password(43,1681

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/player.c,1021
mpd_send_current_song(40,1588
mpd_run_current_song(46,1727
mpd_send_play(66,2072
mpd_run_play(72,2183
mpd_send_play_pos(79,2342
mpd_run_play_pos(85,2484
mpd_send_play_id(93,2682
mpd_run_play_id(99,2813
mpd_send_stop(107,3007
mpd_run_stop(113,3118
mpd_send_toggle_pause(120,3277
mpd_run_toggle_pause(126,3397
mpd_send_pause(134,3574
mpd_run_pause(140,3702
mpd_send_next(147,3880
mpd_run_next(153,3991
mpd_send_previous(160,4150
mpd_run_previous(166,4269
mpd_send_seek_pos(173,4436
mpd_run_seek_pos(180,4597
mpd_send_seek_id(189,4812
mpd_run_seek_id(195,4959
mpd_send_repeat(204,5176
mpd_run_repeat(210,5306
mpd_send_random(218,5488
mpd_run_random(224,5618
mpd_send_single(232,5800
mpd_run_single(238,5930
mpd_send_consume(246,6112
mpd_run_consume(252,6244
mpd_send_crossfade(260,6428
mpd_run_crossfade(266,6574
mpd_send_mixrampdb(274,6772
mpd_run_mixrampdb(280,6907
mpd_send_mixrampdelay(288,7092
mpd_run_mixrampdelay(294,7243
mpd_send_clearerror(302,7444
mpd_run_clearerror(308,7567

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/playlist.c,294
struct mpd_playlist 43,1782
	char *path;path44,1804
	time_t last_modified;50,1912
mpd_playlist_new(54,1968
mpd_playlist_free(77,2347
mpd_playlist_dup(87,2524
mpd_playlist_get_path(96,2699
mpd_playlist_get_last_modified(104,2822
mpd_playlist_begin(110,2950
mpd_playlist_feed(126,3254

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/queue.c,1271
mpd_send_list_queue_meta(44,1673
mpd_send_list_queue_range_meta(50,1803
mpd_send_get_queue_song_pos(57,1991
mpd_run_get_queue_song_pos(63,2154
mpd_send_get_queue_song_id(82,2517
mpd_run_get_queue_song_id(88,2675
mpd_send_queue_changes_meta(107,3034
mpd_send_queue_changes_brief(114,3195
mpd_recv_queue_change_brief(121,3363
mpd_send_add(154,4098
mpd_run_add(160,4231
mpd_send_add_id(168,4412
mpd_send_add_id_to(174,4550
mpd_recv_song_id(181,4708
mpd_run_add_id(196,4955
mpd_run_add_id_to(213,5232
mpd_send_delete(231,5535
mpd_run_delete(237,5667
mpd_send_delete_range(245,5851
mpd_run_delete_range(252,6022
mpd_send_delete_id(261,6248
mpd_run_delete_id(267,6383
mpd_send_shuffle(275,6571
mpd_run_shuffle(281,6688
mpd_send_shuffle_range(289,6855
mpd_run_shuffle_range(295,7020
mpd_send_clear(304,7249
mpd_run_clear(310,7362
mpd_send_move(318,7525
mpd_run_move(324,7673
mpd_send_move_id(332,7872
mpd_run_move_id(338,8025
mpd_send_move_range(346,8230
mpd_run_move_range(353,8414
mpd_send_swap(362,8651
mpd_run_swap(368,8803
mpd_send_swap_id(376,9006
mpd_run_swap_id(382,9159
mpd_send_prio(390,9364
mpd_run_prio(397,9534
mpd_send_prio_range(406,9754
mpd_run_prio_range(413,9942
mpd_send_prio_id(422,10186
mpd_run_prio_id(429,10345

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/quote.c,31
escape(37,1540
quote(59,1812

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/rdirectory.c,28
mpd_recv_directory(36,1527

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/recv.c,106
mpd_recv_pair(40,1600
mpd_recv_pair_named(155,4789
mpd_return_pair(170,5060
mpd_enqueue_pair(182,5345

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/resolver.c,422
#    define MPD_HAVE_GAI51,1806
struct resolver 55,1848
		TYPE_ZERO,57,1874
		TYPE_ZERO, TYPE_ONE,57,1874
		TYPE_ZERO, TYPE_ONE, TYPE_ANY57,1874
	} type;58,1906
	struct addrinfo *ai;ai62,1954
	const struct addrinfo *next;next63,1976
	struct sockaddr_in sin;65,2012
	struct resolver_address current;69,2052
	struct sockaddr_un saun;72,2101
resolver_new(77,2156
resolver_free(167,4159
resolver_next(177,4344

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/response.c,56
mpd_response_finish(40,1712
mpd_response_next(71,2523

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/rplaylist.c,27
mpd_recv_playlist(36,1525

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/run.c,23
mpd_run_check(38,1570

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/search.c,447
mpd_search_init(45,1823
mpd_search_db_songs(70,2356
mpd_search_add_db_songs(77,2507
mpd_search_queue_songs(84,2668
mpd_search_db_tags(91,2838
mpd_count_db_songs(129,3684
mpd_sanitize_arg(154,4195
mpd_search_add_constraint(182,4654
mpd_search_add_uri_constraint(229,5727
mpd_search_add_tag_constraint(237,5931
mpd_search_add_any_tag_constraint(258,6443
mpd_search_commit(266,6644
mpd_search_cancel(292,7181
mpd_recv_pair_tag(303,7385

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/send.c,656
	INTLEN 41,1605
	INTLEN = (sizeof(41,1605
	INTLEN = (sizeof(int)41,1605
	INTLEN = (sizeof(int) * CHAR_BIT 41,1605
	LONGLONGLEN 42,1653
	LONGLONGLEN = (sizeof(42,1653
	LONGLONGLEN = (sizeof(long 42,1653
	LONGLONGLEN = (sizeof(long long)42,1653
	LONGLONGLEN = (sizeof(long long) * CHAR_BIT 42,1653
send_check(49,1792
mpd_send_command(68,2179
mpd_send_command2(103,2908
mpd_send_int_command(122,3261
mpd_send_int2_command(132,3510
mpd_send_int3_command(144,3872
mpd_send_float_command(157,4335
mpd_send_s_u_command(167,4590
mpd_send_range_command(178,4878
mpd_send_range_u_command(188,5179
mpd_send_ll_command(201,5581
mpd_flush(215,5928

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/settings.c,457
struct mpd_settings 36,1520
	char *host;host37,1542
	unsigned port,39,1556
	unsigned port, timeout_ms;39,1556
	char *password;password41,1585
mpd_parse_host_password(54,1894
mpd_check_host(85,2505
mpd_check_port(104,2904
mpd_default_timeout_ms(116,3086
mpd_settings_new(130,3360
mpd_settings_free(172,4271
mpd_settings_get_host(180,4405
mpd_settings_get_port(186,4502
mpd_settings_get_timeout_ms(192,4599
mpd_settings_get_password(198,4712

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/socket.c,203
#  define MSG_DONTWAIT 53,1832
ignore_errno(57,1877
mpd_socket_global_init(69,2056
mpd_socket_wait(91,2463
mpd_socket_wait_connected(114,2873
mpd_socket_connect(136,3229
mpd_socket_close(201,4654

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/song.c,955
struct mpd_tag_value 45,1822
	struct mpd_tag_value *next;next46,1845
	char *value;value48,1875
struct mpd_song 51,1893
	char *uri;uri52,1911
	struct mpd_tag_value tags[tags54,1924
	unsigned duration;59,2033
	unsigned start;65,2135
	unsigned end;72,2298
	time_t last_modified;78,2408
	unsigned pos;83,2490
	unsigned id;88,2558
	bool finished;96,2740
mpd_song_new(101,2792
void mpd_song_free(136,3330
mpd_song_dup(169,3869
mpd_song_get_uri(213,4648
mpd_song_add_tag(226,4875
mpd_song_clear_tag(266,5578
mpd_song_get_tag(289,6087
mpd_song_set_duration(310,6422
mpd_song_get_duration(316,6528
mpd_song_get_start(322,6617
mpd_song_get_end(328,6700
mpd_song_set_last_modified(334,6782
mpd_song_get_last_modified(340,6888
mpd_song_set_pos(346,6983
mpd_song_get_pos(352,7069
mpd_song_set_id(358,7151
mpd_song_get_id(364,7233
mpd_song_begin(370,7319
mpd_song_parse_range(385,7607
mpd_song_feed(417,8195
mpd_recv_song(458,9228

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/stats.c,672
struct mpd_stats 40,1722
	unsigned number_of_artists;41,1741
	unsigned number_of_albums;42,1770
	unsigned number_of_songs;43,1798
	unsigned long uptime;44,1825
	unsigned long db_update_time;45,1848
	unsigned long play_time;46,1879
	unsigned long db_play_time;47,1905
mpd_stats_begin(51,1957
mpd_stats_feed(69,2289
void mpd_stats_free(87,3029
mpd_stats_get_number_of_artists(94,3128
mpd_stats_get_number_of_albums(102,3265
mpd_stats_get_number_of_songs(110,3400
unsigned long mpd_stats_get_uptime(117,3524
unsigned long mpd_stats_get_db_update_time(124,3644
unsigned long mpd_stats_get_play_time(131,3780
unsigned long mpd_stats_get_db_play_time(138,3906

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/status.c,1581
struct mpd_status 43,1784
	int volume;45,1875
	bool repeat;48,1924
	bool random;51,1968
	bool single;54,2017
	bool consume;57,2067
	unsigned queue_length;60,2120
	unsigned queue_version;66,2231
	enum mpd_state state;69,2294
	unsigned crossfade;72,2355
	float mixrampdb;75,2409
	float mixrampdelay;78,2467
	int song_pos;85,2673
	int song_id;88,2736
	int next_song_pos;91,2816
	int next_song_id;94,2883
	unsigned elapsed_time;100,2993
	unsigned elapsed_ms;106,3113
	unsigned total_time;109,3199
	unsigned kbit_rate;112,3255
	struct mpd_audio_format audio_format;115,3310
	unsigned update_id;118,3399
	char *error;error121,3443
mpd_status_begin(125,3481
parse_ms(162,4351
parse_mpd_state(183,4626
parse_audio_format(196,4882
mpd_status_feed(213,5266
void mpd_status_free(276,7669
int mpd_status_get_volume(281,7779
mpd_status_get_repeat(287,7872
mpd_status_get_random(293,7961
mpd_status_get_single(299,8050
mpd_status_get_consume(305,8139
mpd_status_get_queue_length(311,8234
mpd_status_get_queue_version(317,8339
mpd_status_get_state(323,8452
mpd_status_get_crossfade(329,8543
mpd_status_get_mixrampdb(335,8639
mpd_status_get_mixrampdelay(341,8735
mpd_status_get_song_pos(347,8835
mpd_status_get_song_id(353,8927
mpd_status_get_next_song_pos(359,9017
mpd_status_get_next_song_id(365,9119
mpd_status_get_elapsed_time(371,9224
mpd_status_get_elapsed_ms(377,9329
mpd_status_get_total_time(383,9430
mpd_status_get_kbit_rate(389,9531
mpd_status_get_audio_format(395,9653
mpd_status_get_update_id(405,9883
mpd_status_get_error(411,9986

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/sticker.c,301
mpd_send_sticker_set(41,1621
mpd_run_sticker_set(49,1856
mpd_send_sticker_delete(58,2133
mpd_run_sticker_delete(71,2442
mpd_send_sticker_get(80,2702
mpd_send_sticker_list(93,3009
mpd_send_sticker_find(104,3264
mpd_parse_sticker(119,3611
mpd_recv_sticker(132,3832
mpd_return_sticker(159,4383

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/sync.c,186
ignore_errno(40,1585
mpd_sync_poll(50,1730
mpd_sync_io(94,2649
mpd_sync_send_command_v(105,2847
mpd_sync_send_command(132,3297
mpd_sync_flush(146,3566
mpd_sync_recv_line(171,4027

/home/ted/Software/Source/mpd/libmpdclient-2.7/src/tag.c,220
static const char *const mpd_tag_type_names[mpd_tag_type_names39,1699
mpd_tag_name(61,2151
mpd_tag_name_parse(70,2299
ignore_case_char_equals(86,2673
ignore_case_string_equals(92,2778
mpd_tag_name_iparse(109,3010

charset.c,697
static bool charset_enable_input;34,1156
static bool charset_enable_output;35,1190
static char *locale_charset;locale_charset36,1225
static iconv_t char_conv_iconv;38,1255
static char * char_conv_to;39,1287
static char * char_conv_from;40,1315
static int ignore_invalid;41,1345
#define BUFFER_SIZE	43,1373
static inline char * mpc_strchrnul(49,1489
static char * skip_invalid(57,1627
charset_set2(85,2173
charset_set(102,2517
static inline size_t deconst_iconv(120,2771
		const char **a;a125,2921
		char **b;b126,2939
charset_conv_strdup(135,3067
charset_close(170,3753
charset_init(182,3932
void charset_deinit(207,4474
charset_to_utf8(215,4560
charset_from_utf8(234,4856

command.c,1808
#define DIE(40,1275
#define SIMPLE_CMD(42,1350
#define SIMPLE_ONEARG_CMD(50,1606
static void my_finishCommand(57,1870
SIMPLE_CMD(62,1993
int cmd_add 84,2557
cmd_crop(126,3549
get_active_song(169,4546
wait_current(181,4840
int cmd_current(208,5480
int cmd_list_around(250,6427
int cmd_playback(312,7719
int cmd_illustrate(330,8101
int cmd_del 381,9090
cmd_toggle(459,10943
cmd_outputs(473,11227
cmd_enable(497,11813
cmd_disable(510,12080
int cmd_play 522,12345
cmd_seek(556,13027
cmd_move(688,16422
cmd_playlist(709,16829
int is_substring_ignorecase(732,17233
cmd_search_general(753,17754
int cmd_search_title 787,18419
int cmd_search_artist 792,18563
int cmd_search_album 797,18709
int cmd_listall 802,18853
int cmd_update 830,19414
int cmd_ls 888,20659
int cmd_lsplaylists 910,21064
int cmd_load 928,21454
int cmd_insert 945,21784
int cmd_list 964,22237
int cmd_volume 994,22804
cmd_pause(1039,23686
int cmd_repeat 1047,23841
int cmd_random 1069,24218
int cmd_single 1091,24595
int cmd_consume 1113,24972
int cmd_crossfade 1135,25352
int cmd_mixrampdb 1158,25863
int cmd_mixrampdelay 1180,26307
cmd_version(1205,26784
int cmd_loadtab 1218,27102
int cmd_lstab 1241,27572
int cmd_tab 1265,28050
static char * DHMS(1300,28777
#define SECSPERDAY 1306,28897
#define SECSPERHOUR 1309,28949
#define SECSPERMIN 1312,29000
cmd_stats(1329,29279
cmd_status(1353,30045
cmd_replaygain(1361,30210
struct SongIdentity1388,30947
  int id;1390,30969
  int queue_length;1391,30979
  int total_time;1392,30999
set_song_identity(1396,31033
compare_song_and_update(1405,31312
is_new_song(1421,31701
is_song_playing(1447,32244
print_basic_song_info(1460,32482
print_basic_bar(1544,34388
wait_for_play(1577,35168
thr_update_info(1593,35460
cmd_control(1623,35901

idle.c,43
int cmd_idle(28,916
cmd_idleloop(68,1766

list.c,304
static void makeListNodesArray(31,1109
static void freeListNodesArray(43,1369
List * makeList(48,1469
int insertInList(62,1735
int insertInListWithoutKey(98,2434
int findInList(131,3031
int deleteFromList(185,3932
void deleteNodeFromList(204,4228
void freeList(234,4780
void clearList(257,5207

main.c,452
static struct command 45,1378
	const char *command;command46,1402
	const int min,47,1424
	const int min, max;47,1424
	int pipe;48,1495
	cmdhandler handler;55,1852
	const char *usage;usage56,1873
	const char *help;help59,1941
} mpc_table 60,1960
print_usage(150,8578
static int print_help(156,8735
setup_connection(205,9954
find_command(229,10544
check_args(279,11669
run(307,12376
is_self_define_option(324,12717
int main(338,12985

message.c,95
cmd_channels(34,1050
cmd_sendmessage(53,1471
cmd_waitmessage(63,1670
cmd_subscribe(84,2203

options.c,641
#define MAX_LONGOPT_LENGTH 27,915
#define ERROR_UNKNOWN_OPTION 29,946
#define ERROR_BAD_ARGUMENT 30,983
#define ERROR_GOT_ARGUMENT 31,1020
#define ERROR_MISSING_ARGUMENT 32,1057
	int shortopt;35,1112
	const char *longopt;longopt36,1127
	const char *argument;argument37,1149
	const char *description;description38,1172
} arg_opt_t;39,1198
options_t options 42,1213
static const arg_opt_t option_table[option_table49,1383
static const unsigned option_table_size 60,1934
option_error(63,2037
lookup_long_option(87,2652
lookup_short_option(100,2884
handle_option(113,3068
print_option_help(148,3635
parse_options(166,4050

password.c,23
send_password(29,1063

search.c,251
#define DIE(30,974
get_search_type(33,1070
get_constraints(64,1621
static void my_finishCommand(89,2113
add_constraint(95,2248
add_constraints(111,2833
static int do_search 132,3277
cmd_search(149,3585
cmd_find(155,3697
cmd_findadd(161,3807

status.c,47
elapsed_percent(35,1169
print_status(50,1440

sticker.c,117
static void my_finishCommand(30,957
recv_print_stickers(36,1092
recv_print_stickers2(47,1335
cmd_sticker(70,1793

util.c,573
printErrorAndExit(39,1244
int stdinToArgArray(56,1718
void free_pipe_array 85,2238
int get_boolean 91,2337
	static const struct _bool_table 94,2382
		const char * on;95,2417
		const char * off;96,2436
int parse_int(124,3029
int parse_float(140,3350
int parse_songnum(156,3672
int parse_int_value_change(176,4043
static char * appendToString(201,4534
static const char * skipFormatting(220,4863
song_value(244,5224
songToFormatedString(285,6230
print_formatted_song(423,8682
pretty_print_song(434,8868
print_entity_list(440,8970
print_filenames(482,10050
