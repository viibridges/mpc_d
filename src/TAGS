
charset.c,697
static bool charset_enable_input;34,1156
static bool charset_enable_output;35,1190
static char *locale_charset;locale_charset36,1225
static iconv_t char_conv_iconv;38,1255
static char * char_conv_to;39,1287
static char * char_conv_from;40,1315
static int ignore_invalid;41,1345
#define BUFFER_SIZE	43,1373
static inline char * mpc_strchrnul(49,1489
static char * skip_invalid(57,1627
charset_set2(85,2173
charset_set(102,2517
static inline size_t deconst_iconv(120,2771
		const char **a;a125,2921
		char **b;b126,2939
charset_conv_strdup(135,3067
charset_close(170,3753
charset_init(182,3932
void charset_deinit(207,4474
charset_to_utf8(215,4560
charset_from_utf8(234,4856

charset.h,126
#define CHAR_CONV_H24,1012
charset_init(52,1495
charset_deinit(59,1618
charset_to_utf8(64,1671
charset_from_utf8(70,1751

command.c,1341
#define DIE(38,1234
#define SIMPLE_CMD(40,1309
#define SIMPLE_ONEARG_CMD(48,1565
static void my_finishCommand(55,1829
SIMPLE_CMD(60,1952
int cmd_add 82,2516
cmd_crop(124,3508
get_active_song(167,4505
wait_current(179,4799
int cmd_current(206,5439
int cmd_del 246,6290
cmd_toggle(324,8143
cmd_outputs(338,8427
cmd_enable(362,9013
cmd_disable(375,9280
int cmd_play 387,9545
cmd_seek(421,10227
cmd_move(553,13621
cmd_playlist(574,14028
int is_substring_ignorecase(597,14432
cmd_search_general(617,14929
int cmd_search_title 649,15574
int cmd_search_artist 654,15718
int cmd_search_album 659,15864
int cmd_listall 664,16008
int cmd_update 692,16569
int cmd_ls 750,17814
int cmd_lsplaylists 772,18219
int cmd_load 790,18609
int cmd_insert 807,18939
int cmd_list 826,19392
int cmd_volume 856,19959
cmd_pause(901,20841
int cmd_repeat 909,20996
int cmd_random 931,21373
int cmd_single 953,21750
int cmd_consume 975,22127
int cmd_crossfade 997,22507
int cmd_mixrampdb 1020,23018
int cmd_mixrampdelay 1042,23462
cmd_version(1067,23939
int cmd_loadtab 1080,24257
int cmd_lstab 1103,24727
int cmd_tab 1127,25205
static char * DHMS(1162,25932
#define SECSPERDAY 1168,26052
#define SECSPERHOUR 1171,26104
#define SECSPERMIN 1174,26155
cmd_stats(1191,26434
cmd_status(1215,27200
cmd_replaygain(1223,27365

command.h,26
#define COMMAND_H24,1009

gcc.h,855
#define MPD_GCC_H24,1010
#undef mpd_unused31,1164
#  define mpd_deprecated	35,1231
#  define mpd_must_check	36,1285
#  define mpd_noreturn	37,1347
#  define mpd_packed	38,1398
#  define mpd_fprintf	40,1491
#  define mpd_fprintf_	41,1551
#  define mpd_fprintf__	42,1612
#  define mpd_scanf	43,1674
#  define mpd_unused	44,1731
#  define mpd_used	45,1778
#  define mpd_noinline	47,1883
#  define mpd_likely(48,1934
#  define mpd_unlikely(49,1987
#  define mpd_deprecated51,2047
#  define mpd_must_check52,2072
#  define mpd_noreturn53,2097
#  define mpd_packed54,2120
#  define mpd_fprintf55,2141
#  define mpd_fprintf_56,2163
#  define mpd_fprintf__57,2186
#  define mpd_scanf58,2210
#  define mpd_unused59,2230
#  define mpd_used60,2251
#  define mpd_noinline62,2293
#  define mpd_likely(63,2316
#  define mpd_unlikely(64,2345

idle.c,43
int cmd_idle(28,916
cmd_idleloop(68,1766

idle.h,26
#define MPC_IDLE_H21,832

list.c,304
static void makeListNodesArray(31,1109
static void freeListNodesArray(43,1369
List * makeList(48,1469
int insertInList(62,1735
int insertInListWithoutKey(98,2434
int findInList(131,3031
int deleteFromList(185,3932
void deleteNodeFromList(204,4228
void freeList(234,4780
void clearList(257,5207

list.h,486
#define LIST_H24,1007
#define DEFAULT_FREE_DATA_FUNC	29,1117
typedef void ListFreeDataFunc(32,1219
typedef struct _ListNode 34,1259
	char * key;36,1343
	void * data;38,1382
	struct _ListNode * nextNode;40,1421
	struct _ListNode * prevNode;42,1480
} ListNode;43,1510
typedef struct _List 45,1523
	ListNode * firstNode;47,1572
	ListNode * lastNode;49,1620
	ListFreeDataFunc * freeDataFunc;51,1704
	long numberOfNodes;53,1761
	ListNode ** nodesArray;55,1829
} List;56,1854

main.c,451
static struct command 45,1378
	const char *command;command46,1402
	const int min,47,1424
	const int min, max;47,1424
	int pipe;48,1495
	cmdhandler handler;55,1852
	const char *usage;usage56,1873
	const char *help;help59,1941
} mpc_table 60,1960
print_usage(145,7989
static int print_help(151,8140
setup_connection(199,9277
find_command(223,9867
check_args(273,10986
run(301,11693
is_self_define_option(318,12034
int main(330,12244

message.c,95
cmd_channels(34,1050
cmd_sendmessage(53,1471
cmd_waitmessage(63,1670
cmd_subscribe(84,2203

message.h,30
#define MPC_MESSAGE_H24,1013

mpc.h,97
#define MPC_H24,1006
#define STDIN_SYMBOL	28,1042
typedef int (*cmdhandler)cmdhandler32,1092

options.c,641
#define MAX_LONGOPT_LENGTH 27,915
#define ERROR_UNKNOWN_OPTION 29,946
#define ERROR_BAD_ARGUMENT 30,983
#define ERROR_GOT_ARGUMENT 31,1020
#define ERROR_MISSING_ARGUMENT 32,1057
	int shortopt;35,1112
	const char *longopt;longopt36,1127
	const char *argument;argument37,1149
	const char *description;description38,1172
} arg_opt_t;39,1198
options_t options 42,1213
static const arg_opt_t option_table[option_table49,1383
static const unsigned option_table_size 60,1934
option_error(63,2037
lookup_long_option(87,2652
lookup_short_option(100,2884
handle_option(113,3068
print_option_help(148,3635
parse_options(166,4050

options.h,359
#define OPTIONS_H21,831
#define V_QUIET 25,872
#define V_DEFAULT 26,890
#define V_VERBOSE 27,910
	const char *host;host30,948
	const char *port_str;port_str31,967
	int port;32,990
	const char *password;password33,1001
	const char *format;format34,1024
	int verbosity;35,1045
	bool wait;36,1106
	bool custom_format;38,1119
} options_t;39,1140

password.c,23
send_password(29,1063

password.h,27
#define PASSWORD_H24,1011

search.c,251
#define DIE(30,974
get_search_type(33,1070
get_constraints(64,1621
static void my_finishCommand(89,2113
add_constraint(95,2248
add_constraints(111,2833
static int do_search 132,3277
cmd_search(149,3585
cmd_find(155,3697
cmd_findadd(161,3807

search.h,243
#define MPC_SEARCH_H21,834
	SEARCH_TAG_ANY 28,912
	SEARCH_TAG_ANY = MPD_TAG_COUNT 28,912
	SEARCH_TAG_URI 29,949
	SEARCH_TAG_URI = MPD_TAG_COUNT 29,949
struct constraint 32,990
	enum mpd_tag_type type;33,1010
	char *query;query34,1035

status.c,47
elapsed_percent(35,1169
print_status(50,1440

status.h,25
#define STATUS_H24,1009

sticker.c,117
static void my_finishCommand(30,957
recv_print_stickers(36,1092
recv_print_stickers2(47,1335
cmd_sticker(70,1793

sticker.h,29
#define MPC_STICKER_H21,835

util.c,573
printErrorAndExit(39,1244
int stdinToArgArray(56,1718
void free_pipe_array 85,2238
int get_boolean 91,2337
	static const struct _bool_table 94,2382
		const char * on;95,2417
		const char * off;96,2436
int parse_int(124,3029
int parse_float(140,3350
int parse_songnum(156,3672
int parse_int_value_change(176,4043
static char * appendToString(201,4534
static const char * skipFormatting(220,4863
song_value(244,5224
songToFormatedString(285,6230
print_formatted_song(423,8682
pretty_print_song(434,8868
print_entity_list(440,8970
print_filenames(482,10050

util.h,79
#define MPC_UTIL_H24,1011
#define VALUE_CHANGE(31,1097
VALUE_CHANGE(37,1210
